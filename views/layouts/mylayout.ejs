<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="./css/styles.css">
    <link rel="stylesheet" href="./css/profil.css">
    <link rel="stylesheet" href="./css/main.css">
    <link rel="stylesheet" href="./css/upload.css">
    <link rel="stylesheet" href="./css/document.css">
    <link rel="stylesheet" href="./css/sign.css">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-aFq/bzH65dt+w6FI2ooMVUpc+21e0SRygnTpmBvdBgSdnuTN7QbdgL+OapgHtvPp" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
</head>

<body>
    <section>
        <%- include('sidebar') %>
        <main>
            <div class="container-main">
              <%- body %>
            </div>
        </main>
    </section>
</body>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/js/bootstrap.bundle.min.js" integrity="sha384-qKXV1j0HvMUeCBQ+QVp7JcfGl760yU08IQ+GpUo5hlbpg51QRiuqHAJz8+BrxE/N" crossorigin="anonymous"></script>


<!-- canvas tanda tangan digital -->
<script>
  var canvas = document.getElementById('canvas');
  var ctx = canvas.getContext('2d');
  var drawing = false;

  canvas.addEventListener('mousedown', startDrawing);
  canvas.addEventListener('mousemove', draw);
  canvas.addEventListener('mouseup', stopDrawing);
  canvas.addEventListener('mouseout', stopDrawing);

  function startDrawing(e) {
    drawing = true;
    draw(e);
  }

  function draw(e) {
    if (!drawing) return;

    var rect = canvas.getBoundingClientRect();
    var x = e.clientX - rect.left;
    var y = e.clientY - rect.top;

    ctx.lineWidth = 2;
    ctx.lineCap = 'round';
    ctx.lineTo(x, y);
    ctx.stroke();
    ctx.beginPath();
    ctx.moveTo(x, y);
  }

  function stopDrawing() {
    drawing = false;
    ctx.beginPath();
  }

  function clearCanvas() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    document.getElementById('signatureImage').src = "";
    document.getElementById('downloadLink').style.display = 'none'; // Sembunyikan tombol download setelah membersihkan tanda tangan
  }

  function saveSignature() {
    var image = canvas.toDataURL();
    document.getElementById('signatureImage').src = image;
    document.getElementById('downloadLink').href = image;
    document.getElementById('downloadLink').style.display = 'block'; // Tampilkan tombol download setelah menyimpan tanda tangan
  }
</script>
<!-- preview avatar di profil -->
<script>
const fileUpAv = document.getElementById('file-upload-avatar');
  const avatar = document.getElementById('avatar-preview');

  fileUpAv.addEventListener('change', (event) => {
    const file = event.target.files[0];
    const reader = new FileReader();

    reader.onload = (e) => {
      avatar.src = e.target.result;
    };

    reader.readAsDataURL(file);
  });
</script>
<!-- preview sign_img di profil -->
<script>
  const fileUploadSign = document.getElementById('file-upload-sign');
  const signImage = document.getElementById('sign-image');

  fileUploadSign.addEventListener('change', (event) => {
    const file = event.target.files[0];
    const reader = new FileReader();

    reader.onload = (e) => {
      signImage.src = e.target.result;
      signImage.style.filter = 'brightness(1.3) contrast(1.2) saturate(2)'; // Menambahkan filter dan tingkat kecerahan dan saturasi
    };

    reader.readAsDataURL(file);
  });
</script>

<script>
// Mendapatkan elemen file-drop
const fileDrop = document.querySelector('.file-drop');

// Mendapatkan elemen input file
const fileInput = fileDrop.querySelector('input[type="file"]');

// Menambahkan event listener pada elemen file-input
fileInput.addEventListener('change', () => {
  const files = fileInput.files;
  displayFiles(files);
});

// Fungsi untuk menampilkan daftar file yang dipilih
function displayFiles(files) {
  const fileLabel = fileDrop.querySelector('.file-label');

  if (files.length > 0) {
    fileLabel.textContent = files[0].name;
  } else {
    fileLabel.textContent = 'Click to upload';
  }
}

</script>


<script>
  function openTab(evt, tabName) {
  var i, tabContent, tabLinks;
  
  tabContent = document.getElementsByClassName("tab-content");
  for (i = 0; i < tabContent.length; i++) {
    tabContent[i].style.display = "none";
  }
  
  tabLinks = document.getElementsByClassName("tab");
  for (i = 0; i < tabLinks.length; i++) {
    tabLinks[i].style.backgroundColor = "transparent";
    tabLinks[i].style.color = "#B66D6D";
  }
  
  document.getElementById(tabName).style.display = "block";
  evt.currentTarget.style.backgroundColor = "#B66D6D";
  evt.currentTarget.style.color = "#fff";
}

// Set the default tab to "Received"
document.getElementById("received").style.display = "block";
document.getElementsByClassName("tab")[0].style.backgroundColor = "#B66D6D";
document.getElementsByClassName("tab")[0].style.color = "#fff";

</script>



</html>